import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn import linear_model as lm
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import PolynomialFeatures, MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, recall_score, precision_score
from sklearn.utils import shuffle

from sklearn import svm
from sklearn.datasets import make_blobs
from sklearn.inspection import DecisionBoundaryDisplay
from sklearn.metrics import confusion_matrix

X=np.array([[0.12241765485339201, 0.13841406651744803], #результаты статистики "корпус + нейросеть"
[0.18171008797319704, 0.1781805553860057],
[0.18574648496307886, 0.1966828840115601],
[0.15222563374919668, 0.14969586047621689],
[0.25179638580775426, 0.21844281356934722],
[0.1801677976971452, 0.17541113403953637],
[0.13726187269782414, 0.15213410008251513],
[0.21131762058722287, 0.21417891931506547],
[0.2110302772220298, 0.22463349398067636],
[0.37728646793585424, 0.34427743108071246],
[0.26165945346348385, 0.288435354596472],
[0.24009642625324554, 0.237142137161106],
[0.24468772869922448, 0.2588247260962716],
[0.1438060519664628, 0.14673929340432618],
[0.2619205919466413, 0.2605772396166286],
[0.2592003459100331, 0.2427667316548703],
[0.30712497301475605, 0.3318694360045695],
[0.2998683679609591, 0.316807034722339],
[0.2669733494937043, 0.24975994053975065],
[0.21807706725072581, 0.23234628742106198],

[0.13696223040160624, 0.12418827823720738], #результаты статистики "корпус + корпус"
[0.1097067619590619, 0.11319048048915614],
[0.12371631325766341, 0.1233228244789595],
[0.11627728515971046, 0.12637956945608936],
[0.14468057933871256, 0.14131418184017525],
[0.11316336889579055, 0.10277754807578245],
[0.12316369231000128, 0.12639367130717227],
[0.1272104950027471, 0.14030286916767912],
[0.12671464986267467, 0.12897666121714008],
[0.13740023203757512, 0.13607836925889932],
[0.14609365271338953, 0.15770428567067354],
[0.1623102438487214, 0.14809066841116456],
[0.14229912857164326, 0.1628284473849687],
[0.1248730405556335, 0.12275904327412376],
[0.11603691553409352, 0.12877091098188068],
[0.09129940291458673, 0.08544129560366379],
[0.08347923219388333, 0.08593638516441539],
[0.1396372727329292, 0.13828226760262657],
[0.10901723436641297, 0.10740710835619593]]
)

y=np.array([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
            ]) #единицами указан класс "корпус + нейросеть", нулями классы "корпус + корпус" и "нейросеть + нейросеть"

clf = svm.SVC(kernel="linear", C=1000)
clf.fit(X, y)
plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap=plt.cm.Paired)

ax = plt.gca()
DecisionBoundaryDisplay.from_estimator(
    clf,
    X,
    plot_method="contour",
    colors="k",
    levels=[-1, 0, 1],
    alpha=0.5,
    linestyles=["--", "-", "--"],
    ax=ax,
)

ax.scatter(
    clf.support_vectors_[:, 0],
    clf.support_vectors_[:, 1],
    s=150,
    linewidth=1,
    facecolors="none",
    edgecolors="k",
)

plt.xlim(0.09, 0.39)
plt.ylim(0.09, 0.36)

ax.set_aspect('equal', 'box')
plt.show()

#попробуем угадать, к какому классу относятся новые статистики
clf.predict([[0.3180756800211986, 0.3733746649545437]])
#array([1]) - классификатор правильно отнес статистику к первому классу: "человек + нейросеть"
clf.predict([[0.08606978069011677, 0.07004026736241467]]) #верный отрицательный
#array([0]) - определено правильно